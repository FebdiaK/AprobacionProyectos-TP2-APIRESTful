// <auto-generated />
using System;
using AprobacionProyectos.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AprobacionProyectos.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250417082933_UpdateMigration")]
    partial class UpdateMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AprobacionProyectos.Domain.Entities.ApprovalRule", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("ApproverRoleId")
                        .HasColumnType("int")
                        .HasColumnName("ApproverRoleId");

                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("Area");

                    b.Property<decimal>("MaxAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MinAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("StepOrder")
                        .HasColumnType("int");

                    b.Property<int?>("TypeId")
                        .HasColumnType("int")
                        .HasColumnName("Type");

                    b.HasKey("Id");

                    b.HasIndex("ApproverRoleId");

                    b.HasIndex("AreaId");

                    b.HasIndex("TypeId");

                    b.ToTable("ApprovalRules");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            ApproverRoleId = 1,
                            MaxAmount = 100000m,
                            MinAmount = 0m,
                            StepOrder = 1
                        },
                        new
                        {
                            Id = 2L,
                            ApproverRoleId = 2,
                            MaxAmount = 20000m,
                            MinAmount = 5000m,
                            StepOrder = 2
                        },
                        new
                        {
                            Id = 3L,
                            ApproverRoleId = 2,
                            AreaId = 2,
                            MaxAmount = 20000m,
                            MinAmount = 0m,
                            StepOrder = 1,
                            TypeId = 2
                        },
                        new
                        {
                            Id = 4L,
                            ApproverRoleId = 3,
                            MaxAmount = 0m,
                            MinAmount = 20000m,
                            StepOrder = 3
                        },
                        new
                        {
                            Id = 5L,
                            ApproverRoleId = 2,
                            AreaId = 1,
                            MaxAmount = 0m,
                            MinAmount = 5000m,
                            StepOrder = 2,
                            TypeId = 1
                        },
                        new
                        {
                            Id = 6L,
                            ApproverRoleId = 1,
                            MaxAmount = 10000m,
                            MinAmount = 0m,
                            StepOrder = 1,
                            TypeId = 2
                        },
                        new
                        {
                            Id = 7L,
                            ApproverRoleId = 4,
                            AreaId = 2,
                            MaxAmount = 10000m,
                            MinAmount = 0m,
                            StepOrder = 1,
                            TypeId = 1
                        },
                        new
                        {
                            Id = 8L,
                            ApproverRoleId = 2,
                            AreaId = 2,
                            MaxAmount = 30000m,
                            MinAmount = 10000m,
                            StepOrder = 2
                        },
                        new
                        {
                            Id = 9L,
                            ApproverRoleId = 3,
                            AreaId = 3,
                            MaxAmount = 0m,
                            MinAmount = 30000m,
                            StepOrder = 2
                        },
                        new
                        {
                            Id = 10L,
                            ApproverRoleId = 4,
                            MaxAmount = 50000m,
                            MinAmount = 0m,
                            StepOrder = 1,
                            TypeId = 4
                        });
                });

            modelBuilder.Entity("AprobacionProyectos.Domain.Entities.ApprovalStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Id");

                    b.ToTable("ApprovalStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Pending"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Approved"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Rejected"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Observed"
                        });
                });

            modelBuilder.Entity("AprobacionProyectos.Domain.Entities.ApproverRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Id");

                    b.ToTable("ApproverRoles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Líder de Área"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Gerente"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Director"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Comité Técnico"
                        });
                });

            modelBuilder.Entity("AprobacionProyectos.Domain.Entities.Area", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Id");

                    b.ToTable("Areas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Finanzas"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Tecnología"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Recursos Humanos"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Operaciones"
                        });
                });

            modelBuilder.Entity("AprobacionProyectos.Domain.Entities.ProjectApprovalStep", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("ApproverRoleId")
                        .HasColumnType("int")
                        .HasColumnName("ApproverRoleId");

                    b.Property<DateTime?>("DecisionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Observations")
                        .HasColumnType("varchar(max)");

                    b.Property<Guid>("ProjectProposalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("Status");

                    b.Property<int>("StepOrder")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("ApproverUserId");

                    b.HasKey("Id");

                    b.HasIndex("ApproverRoleId");

                    b.HasIndex("ProjectProposalId");

                    b.HasIndex("StatusId");

                    b.HasIndex("UserId");

                    b.ToTable("ProjectApprovalSteps");
                });

            modelBuilder.Entity("AprobacionProyectos.Domain.Entities.ProjectProposal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AreaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<decimal>("EstimatedAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("EstimatedDuration")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("StatusId");

                    b.HasIndex("TypeId");

                    b.ToTable("ProjectProposals");
                });

            modelBuilder.Entity("AprobacionProyectos.Domain.Entities.ProjectType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Id");

                    b.ToTable("ProjectTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Mejora de Procesos"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Innovación y Desarrollo"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Infraestructura"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Capacitación Interna"
                        });
                });

            modelBuilder.Entity("AprobacionProyectos.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("Role");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "jferreyra@unaj.com",
                            Name = "José Ferreyra",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 2,
                            Email = "alucero@unaj.com",
                            Name = "Ana Lucero",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 3,
                            Email = "gmolinas@unaj.com",
                            Name = "Gonzalo Molinas",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 4,
                            Email = "lolivera@unaj.com",
                            Name = "Lucas Olivera",
                            RoleId = 3
                        },
                        new
                        {
                            Id = 5,
                            Email = "dfagundez@unaj.com",
                            Name = "Danilo Fagundez",
                            RoleId = 4
                        },
                        new
                        {
                            Id = 6,
                            Email = "ggalli@unaj.com",
                            Name = "Gabriel Galli",
                            RoleId = 4
                        });
                });

            modelBuilder.Entity("AprobacionProyectos.Domain.Entities.ApprovalRule", b =>
                {
                    b.HasOne("AprobacionProyectos.Domain.Entities.ApproverRole", "ApproverRole")
                        .WithMany("ApprovalRules")
                        .HasForeignKey("ApproverRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AprobacionProyectos.Domain.Entities.Area", "Area")
                        .WithMany("ApprovalRules")
                        .HasForeignKey("AreaId");

                    b.HasOne("AprobacionProyectos.Domain.Entities.ProjectType", "Type")
                        .WithMany("ApprovalRules")
                        .HasForeignKey("TypeId");

                    b.Navigation("ApproverRole");

                    b.Navigation("Area");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("AprobacionProyectos.Domain.Entities.ProjectApprovalStep", b =>
                {
                    b.HasOne("AprobacionProyectos.Domain.Entities.ApproverRole", "ApproverRole")
                        .WithMany("ProjectApprovalSteps")
                        .HasForeignKey("ApproverRoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AprobacionProyectos.Domain.Entities.ProjectProposal", "ProjectProposal")
                        .WithMany("ApprovalSteps")
                        .HasForeignKey("ProjectProposalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AprobacionProyectos.Domain.Entities.ApprovalStatus", "Status")
                        .WithMany("ProjectApprovalSteps")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AprobacionProyectos.Domain.Entities.User", "User")
                        .WithMany("ApprovalSteps")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ApproverRole");

                    b.Navigation("ProjectProposal");

                    b.Navigation("Status");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AprobacionProyectos.Domain.Entities.ProjectProposal", b =>
                {
                    b.HasOne("AprobacionProyectos.Domain.Entities.Area", "Area")
                        .WithMany("ProjectProposals")
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AprobacionProyectos.Domain.Entities.User", "CreatedBy")
                        .WithMany("CreatedProposals")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AprobacionProyectos.Domain.Entities.ApprovalStatus", "Status")
                        .WithMany("ProjectProposals")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AprobacionProyectos.Domain.Entities.ProjectType", "Type")
                        .WithMany("ProjectProposals")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Area");

                    b.Navigation("CreatedBy");

                    b.Navigation("Status");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("AprobacionProyectos.Domain.Entities.User", b =>
                {
                    b.HasOne("AprobacionProyectos.Domain.Entities.ApproverRole", "ApproverRole")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApproverRole");
                });

            modelBuilder.Entity("AprobacionProyectos.Domain.Entities.ApprovalStatus", b =>
                {
                    b.Navigation("ProjectApprovalSteps");

                    b.Navigation("ProjectProposals");
                });

            modelBuilder.Entity("AprobacionProyectos.Domain.Entities.ApproverRole", b =>
                {
                    b.Navigation("ApprovalRules");

                    b.Navigation("ProjectApprovalSteps");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("AprobacionProyectos.Domain.Entities.Area", b =>
                {
                    b.Navigation("ApprovalRules");

                    b.Navigation("ProjectProposals");
                });

            modelBuilder.Entity("AprobacionProyectos.Domain.Entities.ProjectProposal", b =>
                {
                    b.Navigation("ApprovalSteps");
                });

            modelBuilder.Entity("AprobacionProyectos.Domain.Entities.ProjectType", b =>
                {
                    b.Navigation("ApprovalRules");

                    b.Navigation("ProjectProposals");
                });

            modelBuilder.Entity("AprobacionProyectos.Domain.Entities.User", b =>
                {
                    b.Navigation("ApprovalSteps");

                    b.Navigation("CreatedProposals");
                });
#pragma warning restore 612, 618
        }
    }
}
